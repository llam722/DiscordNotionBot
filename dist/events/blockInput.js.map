{"version":3,"file":"blockInput.js","sourceRoot":"","sources":["../../events/blockInput.ts"],"names":[],"mappings":";AAAA,MAAM,EAAE,MAAM,EAAE,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AACzC,MAAM,EAAE,MAAM,EAAE,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;AAC/C,MAAM,EAAE,UAAU,EAAE,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;AACjD,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,CAAC;AAChD,MAAM,EAAE,MAAM,EAAE,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AAE5C,MAAM,CAAC,OAAO,GAAG;IACf,IAAI,EAAE,MAAM,CAAC,iBAAiB;IAC9B,KAAK,CAAC,OAAO,CAAC,WAAW;QACvB,IAAI,WAAW,CAAC,QAAQ,KAAK,YAAY,EAAE;YACzC,MAAM,WAAW,CAAC,KAAK,CAAC;gBACtB,OAAO,EAAE,4CAA4C;aACtD,CAAC,CAAC;YAEH,MAAM,WAAW,GACf,WAAW,CAAC,MAAM,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,CAAC;YAC3D,MAAM,YAAY,GAChB,WAAW,CAAC,MAAM,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,CAAC;YAC5D,OAAO,CAAC,GAAG,CAAC,EAAE,WAAW,EAAE,YAAY,EAAE,CAAC,CAAC;YAC3C,kGAAkG;YAClG,OAAO,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC;SACpC;QAED,KAAK,UAAU,OAAO,CAAC,WAAW,EAAE,YAAY;YAC9C,MAAM,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,OAAO;gBACV,OAAO,MAAM,WAAW,CAAC,KAAK,CAC5B,uFAAuF,CACxF,CAAC;YACJ,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;YAChC,MAAM,QAAQ,GAAG,MAAM,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;gBACnD,QAAQ,EAAE,OAAO;gBACjB,QAAQ,EAAE;oBACR;wBACE,SAAS,EAAE;4BACT,SAAS,EAAE;gCACT;oCACE,IAAI,EAAE;wCACJ,OAAO,EAAE,WAAW;qCACrB;iCACF;6BACF;yBACF;qBACF;oBACD;wBACE,SAAS,EAAE;4BACT,SAAS,EAAE;gCACT;oCACE,IAAI,EAAE;wCACJ,OAAO,EAAE,YAAY;wCACrB,UAAU;wCACV,wDAAwD;wCACxD,KAAK;qCACN;iCACF;6BACF;yBACF;qBACF;iBACF;aACF,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,8BAA8B,CAAC,CAAC;YACtD,MAAM,CAAC,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACtB,CAAC;IACH,CAAC;CACF,CAAC","sourcesContent":["const { Events } = require(\"discord.js\");\nconst { Client } = require(\"@notionhq/client\");\nconst { NOTION_KEY } = require(\"../config.json\");\nconst notion = new Client({ auth: NOTION_KEY });\nconst { pageId } = require(\"../tempPageId\");\n\nmodule.exports = {\n  name: Events.InteractionCreate,\n  async execute(interaction) {\n    if (interaction.customId === \"blockInput\") {\n      await interaction.reply({\n        content: \"Your submission was received successfully!\",\n      });\n\n      const blockHeader =\n        interaction.fields.getTextInputValue(\"blockHeaderInput\");\n      const blockContent =\n        interaction.fields.getTextInputValue(\"blockContentInput\");\n      console.log({ blockHeader, blockContent });\n      //appends the new content to the current page after grabbing the fields from the interaction above\n      addItem(blockHeader, blockContent);\n    }\n\n    async function addItem(blockHeader, blockContent) {\n      const blockId = pageId[0];\n      if (!blockId)\n        return await interaction.reply(\n          'No page selected. Please select a page using \"/selectpage\" before using this command.'\n        );\n      console.log(blockId, \"blockId\");\n      const response = await notion.blocks.children.append({\n        block_id: blockId,\n        children: [\n          {\n            heading_2: {\n              rich_text: [\n                {\n                  text: {\n                    content: blockHeader,\n                  },\n                },\n              ],\n            },\n          },\n          {\n            paragraph: {\n              rich_text: [\n                {\n                  text: {\n                    content: blockContent,\n                    // link: {\n                    //   url: \"https://en.wikipedia.org/wiki/Lacinato_kale\",\n                    // },\n                  },\n                },\n              ],\n            },\n          },\n        ],\n      });\n      console.log(response, \"block content added to page!\");\n      pageId.shift();\n      console.log(pageId);\n    }\n  },\n};\n"]}